WEBVTT

0
00:00.270 --> 00:06.780
Hi guys and welcome to the course. Now after thousands of students have taken this course I've compiled

1
00:06.780 --> 00:13.470
some of the top tips from the most successful students to help you make the most of your time on the

2
00:13.470 --> 00:14.310
course.

3
00:14.310 --> 00:18.090
So I know what I do with instruction manuals when I receive them.

4
00:18.090 --> 00:19.250
But this is not it.

5
00:19.290 --> 00:24.990
Because I want to share with you some of the most useful tips that will help you learn to code and get

6
00:24.990 --> 00:26.460
the most out of the course.

7
00:26.460 --> 00:34.200
So first tip is as you go from lesson to lesson in the course you'll find that each of the lessons should

8
00:34.200 --> 00:36.570
take about 10 minutes long.

9
00:36.570 --> 00:40.020
And this is something that we intentionally designed for the course.

10
00:40.020 --> 00:46.890
Now a lot of students, when they're watching video tutorials online very often what people do, is they'll

11
00:46.890 --> 00:50.790
watch the video and type along to the code.

12
00:50.790 --> 00:52.530
And this is what we tend to call code along.

13
00:52.530 --> 00:58.260
So the tutorial types a bit. You type a bit. You try to keep up with the pace of the tutorial or you pause

14
00:58.260 --> 01:04.240
the video every so often to catch up. But essentially you're coding along with the instructor.

15
01:04.380 --> 01:10.280
And this is probably one of the most intuitive ways for people to learn from online tutorials.

16
01:10.290 --> 01:18.210
Now in order for you to be more successful than most people. What I would recommend is: instead to watch

17
01:18.210 --> 01:23.280
the video tutorials, which are usually as I said about 10 minutes long.

18
01:23.280 --> 01:29.700
If it's a 20 minute or a 50-minute tutorial then stop it and around the 10-minute mark And while you're

19
01:29.700 --> 01:36.780
watching it, instead of spending time trying to frantically type out the code, I want you instead to just

20
01:36.870 --> 01:44.130
try and understand what's going on. Why the code is being written and understand the purpose of the code

21
01:44.490 --> 01:47.310
rather than trying to type along at the same pace.

22
01:47.340 --> 01:52.770
Now once you've understood what those 10 minutes are about; what the tutorial is trying to teach you

23
01:53.250 --> 02:01.590
then to go to your computer and type out the code and try to replicate what happened in the 10 minutes.

24
02:01.590 --> 02:09.030
Now the reason why this helps people learn so much better is because, instead of just copying code by

25
02:09.030 --> 02:11.510
rote, which doesn't teach you anything.

26
02:11.520 --> 02:20.610
Instead, it forces you to really understand what's going on and absorb the content and then test yourself

27
02:20.640 --> 02:23.460
afterwards to see if you really understood.

28
02:23.460 --> 02:26.110
So this is my number one top tip.

29
02:26.400 --> 02:32.970
And it's important to remember that we are learning programming. We're not learning how to type fast. It

30
02:32.970 --> 02:38.570
doesn't help you become a better programmer by just copying out code as fast as you can.

31
02:38.640 --> 02:44.910
If you wanted to practice your typing and to speed up your typing skills then I recommend something

32
02:44.910 --> 02:52.470
like keybr.com where you can focus on that specific skill to improve your speed of typing.

33
02:52.470 --> 02:56.760
But what we're going to focus on in the course is learning programming.

34
02:56.760 --> 02:59.390
So we're going to keep our eye on the prize.

35
02:59.490 --> 03:06.270
Now while you're listening to the videos and you're understanding what's going on, I recommend taking

36
03:06.270 --> 03:10.170
a few notes for yourself to come back to or review in the future.

37
03:10.230 --> 03:16.910
And this is especially useful after when those 10 minutes are up and you're trying to remember one of

38
03:16.920 --> 03:21.600
those bits of code that you had to type and what was the theory that was covered.

39
03:21.600 --> 03:28.350
So one of my favorite note-taking systems is something called Cornell notes. And it's very very simple.

40
03:28.350 --> 03:34.830
It just splits a single note page into 4 sections. At the top, you have the topic of what the notes are

41
03:34.830 --> 03:40.050
about. And then you have the section of notes where you would write down the majority of your notes.

42
03:40.050 --> 03:47.760
Now after you write a few lines it's recommended that you go and review those notes and pick out the

43
03:47.760 --> 03:53.880
most important keywords or questions that you're asking yourself that you want to research on later

44
03:54.210 --> 03:56.790
or any sort of hints or reminders to yourself.

45
03:57.390 --> 04:03.570
And finally once you've completed the lesson then you go to the summary section and you summarize what

46
04:03.570 --> 04:07.050
the entire lesson was about in a few bullet points.

47
04:07.050 --> 04:11.550
So I've created a downloadable PDF of this note-taking system.

48
04:11.580 --> 04:17.100
So if you're keen to try it out, go ahead and download it from the course resources section and you can

49
04:17.100 --> 04:22.700
print it out into a notebook or just on a few loose sheets if you want to try it out.

50
04:22.710 --> 04:29.790
Now the next thing to remember is that if I'm talking too fast or too slow you can always change the

51
04:29.790 --> 04:31.080
playback speed.

52
04:31.080 --> 04:36.750
Now if you're in a lesson that you find particularly easy to understand and you already know most of

53
04:36.750 --> 04:42.090
the concepts, then go ahead and switch the video player to double speed so that you can cover much more

54
04:42.090 --> 04:44.330
ground in the same space of time.

55
04:44.340 --> 04:50.220
Now on the other hand if I'm talking too fast or if English is not your first language then feel free

56
04:50.220 --> 04:56.370
to change the speed to half-speed, so that I talk a lot slower and you can take up the information

57
04:56.370 --> 04:57.150
more readily.

58
04:57.180 --> 05:03.730
But it's important that you try to not skip any of the tutorials on any of the modules.

59
05:03.980 --> 05:11.360
And the reason is that the curriculum was carefully designed so that it would be a smooth sloping

60
05:11.360 --> 05:18.740
ramp so that you start out at the beginning and you slowly make your way through more and more difficult

61
05:18.740 --> 05:19.930
concepts.

62
05:19.940 --> 05:26.990
Now if you skip a couple of modules then it makes it really, really hard for you to catch up and to understand

63
05:27.020 --> 05:29.940
what's going on, which is the most important thing.

64
05:29.960 --> 05:36.740
However some of the videos I will label with optional or skippable and in that case feel free to skip

65
05:36.740 --> 05:38.990
those lessons if they don't interest you.

66
05:38.990 --> 05:46.460
Now the next thing to remember is that if you find at any point the tutorials become harder and they

67
05:46.460 --> 05:50.330
inevitably will be they're designed to get harder and harder.

68
05:50.510 --> 05:57.020
But if you find that it's a little bit too difficult, then I recommend just bookmarking it.

69
05:57.140 --> 06:04.490
Making a note of which module you really struggled with and trying to use that method of watching the

70
06:04.490 --> 06:09.870
videos for 10 minutes, reviewing what has been taught, trying to replicate the code yourself.

71
06:09.950 --> 06:15.770
But if you're still stuck and you really don't understand what's going on then that might be something

72
06:15.770 --> 06:17.950
that you have to come back to.

73
06:17.960 --> 06:25.190
So I find that usually with programming concepts it helps to try it out, read around the topic, and then

74
06:25.190 --> 06:28.930
come back to it after a week or so. And very often

75
06:28.940 --> 06:35.510
what was very very difficult the first time you come across it, after you've done it a few times, after you've

76
06:35.600 --> 06:40.350
researched around the topic and then you come back to it, it becomes a lot easier.

77
06:40.490 --> 06:44.570
So remember to mark things for review that you don't understand.

78
06:44.810 --> 06:53.690
Now recently I went to learn windsurfing in Mykonos. And it's a skill that I've never had before.

79
06:53.780 --> 07:00.620
It's something that I found incredibly challenging. And I fell on my face during the entire lesson pretty

80
07:00.620 --> 07:02.780
much and it hurt a lot.

81
07:02.780 --> 07:09.350
I got battered and bruised. And my ego got bruised a lot as well. But this is exactly what it's like when

82
07:09.350 --> 07:17.960
you try to learn a new skill so it's important that you persevere and continue to put in the hours to

83
07:17.960 --> 07:25.940
practice and to try and try again. Because you can learn something very superficially just by watching

84
07:25.940 --> 07:34.070
a video or you know trying it for a few hours. But in order to master a skill, the most important thing

85
07:34.550 --> 07:36.520
is practice.

86
07:36.530 --> 07:43.700
Now the final thing is that I will say it now you will get stuck at some point because everybody does

87
07:44.150 --> 07:50.750
And in fact, I wish that Hollywood would stop making movies where programmers are just typing away, like

88
07:50.750 --> 07:57.350
some sort of frenzied hacker person. Because most of the programmers I know who actually do this as a

89
07:57.350 --> 08:04.610
job, they spend probably 90% of their time just staring at the screen trying to figure out what

90
08:04.670 --> 08:05.390
is wrong.

91
08:05.390 --> 08:07.120
Why is it not working?

92
08:07.220 --> 08:15.020
So getting stuck is very much a universal part of programming; something that you have to come to even

93
08:15.020 --> 08:16.380
love and enjoy.

94
08:16.430 --> 08:23.510
So when you do find yourself stuck, I want you to imagine that you're already a fully-fledged developer,

95
08:23.930 --> 08:29.990
working a job where somebody is paying you to do this for them, because you're the professional.

96
08:29.990 --> 08:38.390
So I want you to use the tools that professional programmers use when they get stuck. And that is Google

97
08:38.570 --> 08:39.770
and Stack Overflow.

98
08:39.960 --> 08:43.580
Try to figure it out. Try to see: what did other people do?

99
08:43.670 --> 08:50.230
Because 99% of the time, you won't be the first person who's come across that problem.

100
08:50.240 --> 08:56.090
It's very likely that somebody has experienced that before and other people have helped them to solve

101
08:56.090 --> 09:02.840
that problem or help them understand what it is they're stuck on. And the thing to remember is that struggling

102
09:02.990 --> 09:10.040
is good. In that moment when you finally spot that typo or finally figure out why it is that your code

103
09:10.040 --> 09:11.900
isn't working and you fix it.

104
09:11.900 --> 09:19.970
That is one of the best feelings in the world. So struggle is good. And it really is through the struggles

105
09:19.970 --> 09:24.410
that you actually improve and level up your skills.

106
09:24.410 --> 09:33.350
So I'm so excited to be on this journey with you and I look forward to all of your success in the future!